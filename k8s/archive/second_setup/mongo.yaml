# This uses an ephemeral volume, which os desired
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels: 
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template: 
    metadata:
      labels:
        app: mongo
    spec:
      initContainers:
      - name: copy-key
        image: busybox
        command: 
          - /bin/sh
          - "-c"
          - |
            # echo '1. get init.js';
            # wget https://raw.githubusercontent.com/ojaswa1942/ibm-banking-api/master/db.init.js -O /data/db.init.js;
            # ls -la /shared-secrets;
            # cat /shared-secrets/key;
            # echo done;
            cp /shared-secrets/key /shared-secrets-data/key;
            chown 999:999 /shared-secrets-data/key;
            chmod 400 /shared-secrets-data/key;
            chown -R 999:999 /data;
        volumeMounts:
        - name: mongo-shared-key
          mountPath: "/shared-secrets"
        - name: mongo-shared-key-data
          mountPath: "/shared-secrets-data"
        - name: mongo-data
          mountPath: "/data"
      # securityContext:
      #   fsGroup: 999
      #   runAsUser: 0
      #   runAsGroup: 0
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        envFrom:
        - configMapRef:
            name: config
        - secretRef:
            name: secret
        volumeMounts:
        - name: init-scripts
          mountPath: "/docker-entrypoint-initdb.d/"
        - name: mongo-shared-key-data
          mountPath: "/shared-secrets"
          readOnly: true
        - name: mongo-data
          mountPath: /data
        # lifecycle:
        #   postStart:
        #     exec:
        #       command:
        #       - bash
        #       - -c
        #       - cp /shared-secrets/key /data/key; 
        #       - chown mongodb /data/key;
        #       - chmod 400 /data/key
        args: [
          "--replSet", 
          "$(MONGO_REPLICA_SET_NAME)", 
          "--bind_ip",
          "0.0.0.0", 
          "--keyFile",  
          "/shared-secrets/key",
          "--setParameter",
          "authenticationMechanisms=SCRAM-SHA-1"
        ]
        # livenessProbe:
        #   exec:
        #     command:
        #       - test $(echo "rs.initiate().ok || rs.status().ok" | mongo -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 3
        #   periodSeconds: 20
      volumes:
      - name: init-scripts
        configMap:
          name: db-init
      - name: mongo-shared-key-data
        emptyDir: {}
      - name: mongo-shared-key
        secret:
          secretName: mongo-key-secret
          defaultMode: 0400
      - name: mongo-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo 
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017 
